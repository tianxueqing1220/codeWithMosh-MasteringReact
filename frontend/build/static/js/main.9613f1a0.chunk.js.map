{"version":3,"sources":["components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/logService.js","services/httpService.js","services/authService.js","components/moviesTable.jsx","components/searchBox.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","utils/paginate.js","services/genreService.js","services/movieService.js","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/common/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["Like","props","classes","liked","onClick","style","cursor","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","map","label","key","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","email","password","a","http","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","movie","Link","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Pagination","itemCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","paginate","pageNumber","startIndex","slice","take","getGenres","movieUrl","id","getMovie","movieId","saveMovie","body","deleteMovie","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Customers","Rentals","NotFound","NavBar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","NavLink","aria-current","Fragment","Input","rest","htmlFor","Select","options","option","Form","validate","Joi","schema","abortEarly","errors","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModal","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","Logout","register","RegisterForm","userService","ProtectedRoute","component","render","Route","App","Switch","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.9613f1a0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from 'react';\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = {...this.props.sortColumn}\n        if (sortColumn.path === path) {\n            sortColumn.order = (sortColumn.order === 'asc' ? 'desc' : 'asc')\n        } else {\n            sortColumn.path = path\n            sortColumn.order = 'asc'\n        }\n        this.props.onSort(sortColumn)\n    }\n\n    renderSortIcon = column => {\n        const { sortColumn } = this.props\n        if (column.path !== sortColumn.path) return null\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>\n        return <i className=\"fa fa-sort-desc\" />\n    }\n\n    render() { \n        return ( <thead>\n            <tr>\n                {this.props.columns.map(column => \n                    <th className=\"clickable\"\n                        key={column.path || column.key} \n                        onClick={() => this.raiseSort(column.path)}\n                    >\n                            { column.label } {this.renderSortIcon(column)}\n                    </th>\n                )}\n            </tr>\n        </thead> );\n    }\n}\n \nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from 'lodash'\n\nclass TableBody extends Component {\n    renderCell = (item, column) => {\n        if (column.content) return column.content(item)\n        return _.get(item, column.path)\n    }\n\n    createKey = (item, column) => {\n        return item._id + (column.path || column.key)\n    }\n\n\n    render() { \n        const { data, columns } = this.props\n\n        return (<tbody>\n            {data.map(item => \n                <tr key={item._id}>\n                    {columns.map(column => \n                        <td key={this.createKey(item, column)}>\n                            {this.renderCell(item, column)}\n                        </td>\n                    )}\n                </tr>\n            )}\n        </tbody> );\n    }\n}\n \nexport default TableBody;","import React from 'react';\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n    return (\n    <table className=\"table\">\n        <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n        <TableBody columns={columns}  data={data} />\n    </table>);\n}\n \nexport default Table;","function init () {\n}\n\nfunction log (error) {\n    console.log('in error: ', error);\n}\n\nexport default {\n    init,\n    log\n}","import axios from 'axios';\nimport logger from \"./logService\";\nimport { toast } from 'react-toastify';\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectdError = error.response && error.response.status >= 400 && error.response.status < 500\n  if (!expectdError) {\n    logger.log('Logging the error.', error);\n    toast('An unexpected error occurred.')\n  }\n  return Promise.reject(error);\n})\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n    get: axios.get,\n    post: axios.post,\n    put: axios.put,\n    delete: axios.delete,\n    setJwt\n}","import http from './httpService';\nimport jwtDecode from 'jwt-decode';\n\nconst apiEndpoint = '/auth';\nconst tokenKey = 'token';\n\nhttp.setJwt(getJwt());\n\nexport async function login (email, password) {\n    const {data: jwt} = await http.post(apiEndpoint, {email, password})\n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n    localStorage.setItem(tokenKey, jwt)\n}\n\nexport function logout() {\n    localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        return jwtDecode(jwt);\n      } catch (ex) {\n          return null\n      }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(tokenKey);\n}\n\nexport default {\n    login,\n    loginWithJwt,\n    logout,\n    getCurrentUser,\n    getJwt\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport auth from '../services/authService'\n\nclass MoviesTable extends Component {\n    columns = [\n        { \n            path: 'title', \n            label: 'Title', \n            content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n        },\n        { path: 'genre.name', label: 'Genre' },\n        { path: 'numberInStock', label: 'Stock'},\n        { path: 'dailyRentalRate', label: 'Rate'},\n        { \n            key: 'like', \n            content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)}/>\n        }\n    ]\n\n    deleteColumn = { \n        key: 'delete', \n        content:  movie => <button onClick={() => this.props.onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button>\n    }\n    \n    constructor () {\n        super();\n        const user = auth.getCurrentUser();\n        if (user && user.isAdmin) {\n            this.columns.push(this.deleteColumn);\n        }\n    }\n\n    render() {\n        const { movies, onSort, sortColumn } = this.props\n        return (\n            <Table columns={this.columns} data={movies} sortColumn={sortColumn} onSort={onSort} />\n        );\n    }\n}\n \nexport default MoviesTable;","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nconst Pagination = (props) => {\n    const { itemCount, pageSize, currentPage, onPageChange } = props\n    const pagesCount = Math.ceil(itemCount / pageSize)\n    if (pagesCount === 1) return null\n    const pages = _.range(1, pagesCount + 1)\n\n    return <nav>\n        <ul className=\"pagination\">\n            {pages.map(page => \n            (\n                <li key={page} className={page === currentPage ? 'page-item active' : 'page-item'}>\n                    <a className=\"page-link\" onClick={() => onPageChange(page)}>{page}</a>\n                </li>\n            ))}\n            \n        </ul>\n    </nav>;\n}\n\nPagination.propTypes = {\n    itemCount: PropTypes.number.isRequired, \n    pageSize: PropTypes.number.isRequired, \n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n}\n \nexport default Pagination;","import React from 'react';\n\nconst ListGroup = (props) => {\n    const { items, textProperty, valueProperty, onItemSelect, selectedItem} = props\n    return (\n    <ul className=\"list-group\">\n       {items.map(item => \n            <li onClick={() => onItemSelect(item)} key={item[valueProperty]} className={item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}>\n                {item[textProperty]}\n            </li>\n        )}\n    </ul>\n    )\n}\n\nListGroup.defaultProps = {\n    textProperty: \"name\",\n    valueProperty: \"_id\"\n}\n \nexport default ListGroup;","import _ from 'lodash'\n\nexport function paginate(items, pageNumber, pageSize) {\n   const startIndex = (pageNumber - 1) * pageSize \n    let movies = _.slice(items, startIndex)\n    movies = _.take(movies, pageSize)\n    return movies\n}","import http from './httpService';\n\nexport function getGenres() {\n    return http.get('/genres')\n}","import http from './httpService';\n\nconst apiEndpoint = '/movies'\n\nfunction movieUrl(id) {\n    return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n    return http.get(apiEndpoint)\n}\n\nexport function getMovie(movieId) {\n    return http.get(movieUrl(movieId))\n}\n\nexport function saveMovie(movie) {\n    if (movie._id) {\n        const body = {...movie};\n        delete body._id;\n        return http.put(movieUrl(movie._id), body);\n    }\n    return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n    return http.delete(movieUrl(movieId))\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport MoviesTable from \"./moviesTable\";\nimport SearchBox from \"./searchBox\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/genreService\";\nimport { deleteMovie, getMovies } from \"../services/movieService\";\nimport _, { get } from 'lodash'\n\nclass Movies extends Component {\n    state = { \n        movies: [],\n        genres: [],\n        pageSize: 4,\n        currentPage: 1,\n        searchQuery: \"\",\n        selectedGenre: null,\n        sortColumn: { path: 'title', order: 'asc'}\n    };\n\n    async componentDidMount() {\n        const { data } = await getGenres();\n        const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n        const { data: movies } = await getMovies()\n        this.setState({ movies, genres })\n    }\n\n    handleDelete = async movie => {\n        const originalMovies = this.state.movies;\n        const movies = originalMovies.filter(m => m._id !== movie._id);\n        this.setState({movies});\n        try {\n            await deleteMovie(movie._id);\n        } catch (ex) {\n            if (ex.response && ex.response.status === 404) {\n                toast.error('This movie has already been deleted.')\n            }\n            this.setState({movies: originalMovies})\n        }\n        \n    }\n\n    handleLike = movie => {\t\n      const movies = [...this.state.movies];\t\n      const index = movies.indexOf(movie);\t\n      movies[index] = { ...movies[index] };\t\n      movies[index].liked = !movies[index].liked;\t\n      this.setState({ movies });\t\n    };\n\n    handlePageChange = page => {\n        this.setState({currentPage: page})\n    }\n\n    handleGenreSelect = genre => {\n        this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1})\n    }\n    \n    handleSearch = query => {\n        this.setState({searchQuery: query, selectedGenre: null, currentPage: 1})\n    }\n\n    handleSort = sortColumn => {\n        this.setState({ sortColumn })\n    }\n\n    getPageData = () => {\n        const { pageSize, currentPage, selectedGenre, sortColumn, searchQuery, movies: allMovies } = this.state\n        let filtered = allMovies;\n        if (searchQuery) {\n            filtered = allMovies.filter(movie => movie.title.toLowerCase().startsWith(searchQuery.toLowerCase()))\n        } else if (selectedGenre && selectedGenre._id) {\n            filtered = allMovies.filter(m => m.genre._id === selectedGenre._id)\n        }\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\n        const movies = paginate(sorted, currentPage, pageSize)\n        return {totalCount: filtered.length, data: movies}\n    }\n\n    render() { \n        const { length: count } = this.state.movies;\n        const { pageSize, currentPage, selectedGenre, sortColumn, searchQuery } = this.state\n        const { user } = this.props;\n\n        if (count === 0) return <p>No movies</p>;\n        const { totalCount, data: movies} = this.getPageData()\n        return (\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <ListGroup \n                        items={this.state.genres}\n                        selectedItem={selectedGenre}\n                        onItemSelect={this.handleGenreSelect}\n                    />\n                </div>\n                <div className=\"col\">\n                    {user && <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{marginBottom: 20}}>New Movies</Link>}\n                    <p>Showing {totalCount} movies in database</p>\n                    <SearchBox value={searchQuery} onChange={this.handleSearch} />\n                    <MoviesTable \n                        movies={movies}\n                        sortColumn={sortColumn}\n                        onLike={this.handleLike}\n                        onDelete={this.handleDelete}\n                        onSort={this.handleSort}\n                    />\n                    <Pagination \n                        itemCount={totalCount}\n                        pageSize={pageSize} \n                        currentPage={currentPage} \n                        onPageChange={this.handlePageChange}\n                    />\n                </div>\n                \n            </div>\n       \n        )\n    }\n}\n \nexport default Movies;","import React from 'react';\n\nconst Customers = () => {\n    return <h1>Customers</h1>\n}\n \nexport default Customers;","import React from 'react';\n\nconst Rentals = () => {\n    return <h1>Rentals</h1>\n}\n \nexport default Rentals;","import React from 'react';\n\nconst NotFound = () => {\n    return <h1>Not Found</h1>\n}\n \nexport default NotFound;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { NavLink, Link } from 'react-router-dom'\n\nconst NavBar = ({ user }) => {\n    return ( \n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\n        <button \n            className=\"navbar-toggler\" \n            type=\"button\" \n            data-bs-toggle=\"collapse\" \n            data-bs-target=\"#navbarNav\" \n            aria-controls=\"navbarNav\" \n            aria-expanded=\"false\" \n            aria-label=\"Toggle navigation\"\n        >\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <div className=\"navbar-nav\">\n                <NavLink className=\"nav-item nav-link\" aria-current=\"page\" to=\"/movies\">Movies</NavLink>\n                <NavLink className=\"nav-item nav-link\" to=\"/customers\">Customers</NavLink>\n                <NavLink className=\"nav-item nav-link\" to=\"/rentals\">Rentals</NavLink>\n                {!user && (\n                    <React.Fragment>\n                        <NavLink className=\"nav-item nav-link\" to=\"/login\">Login</NavLink>\n                        <NavLink className=\"nav-item nav-link\" to=\"/register\">Register</NavLink>\n                    </React.Fragment>\n                )}\n                {user && (\n                    <React.Fragment>\n                        <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                            {user.name}\n                        </NavLink>\n                        <NavLink className=\"nav-item nav-link\" to=\"/logout\">Logout</NavLink>\n                    </React.Fragment>\n                )}\n            </div>\n        </div>\n    </div>\n  </nav> );\n}\n \nexport default NavBar;","import React from 'react';\n\nconst Input = ({name, label, error, ...rest}) => {\n    return ( \n    <div className=\"form-group mt-3\">\n        <label htmlFor={name}>{label}</label>\n        <input {...rest} name={name} id={name} className=\"form-control\" />\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div> );\n}\n \nexport default Input;","import React from 'react';\n\nconst Select = ({name, label, options, error, ...rest}) => {\n    return (\n        <div className=\"form-group mt-3\">\n            <label htmlFor={name}>{label}</label>\n            <select name={name} id={name} {...rest} className=\"form-control\">\n                <option value=\"\"></option>\n                {options.map(option => (\n                    <option key={option._id} value={option._id}>\n                        {option.name}\n                    </option>\n                ))}\n            </select>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div> \n    );\n}\n \nexport default Select;","import React, { Component } from 'react';\nimport Joi from 'joi-browser'\nimport Input from './input'\nimport Select from './select'\n\nclass Form extends Component {\n    state = { \n        data: {},\n        error: {}\n    }\n\n    validate = () => {\n        const options = { abortEarly: false }\n        const { error } = Joi.validate(this.state.data, this.schema, options)\n        if (!error) return null\n        const errors = {}\n        for (let item of error.details)\n            errors[item.path[0]] = item.message\n        return errors\n    }\n\n    validateProperty = ({name, value}) => {\n        const obj = { [name]: value }\n        const schema = {[name]: this.schema[name]}\n        const {error} = Joi.validate(obj, schema)\n        return error ? error.details[0].message: null\n    }\n\n    \n    handleSubmit = e => {\n        e.preventDefault();\n        const errors = this.validate();\n        this.setState({errors: errors || {}})\n        if (errors) return\n\n        this.doSubmit()\n    }\n\n    handleChange = ({ currentTarget: input }) => {\n        const errors = {...this.state.errors}\n        const errorMessage = this.validateProperty(input)\n        if (errorMessage) errors[input.name] = errorMessage\n        else delete errors[input.name]\n\n        const data = {...this.state.data}\n        data[input.name]  = input.value;\n        this.setState({ data, errors })\n    }\n\n    renderButton (label) {\n        return (\n            <button disabled={this.validate()} className=\"btn btn-primary mt-3\">{label}</button>\n        )\n    }\n\n    renderSelect (name, label, options) {\n        const { data, errors } = this.state\n        return (\n            <Select \n                name={name} \n                value={data[name]} \n                label={label} \n                options={options}\n                onChange={this.handleChange}\n                error={errors[name]}\n            />\n        )\n    }\n\n    renderInput (name, label, type = \"text\") {\n        const { data, errors } = this.state\n        return (\n            <Input \n                type={type}\n                name={name} \n                value={data[name]} \n                label={label} \n                onChange={this.handleChange}\n                error={errors[name]}\n            />\n        )\n    }\n}\n \nexport default Form;","import React from 'react';\nimport Form from './common/form'\nimport Joi from 'joi-browser'\nimport { getGenres } from '../services/genreService';\nimport { getMovie, saveMovie } from '../services/movieService';\n\nclass MovieForm extends Form {\n    state = {\n        data: {\n            title: '',\n            genreId: '',\n            numberInStock: '',\n            dailyRentalRate: ''\n        },\n        genres: [],\n        errors: {}\n    }\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string().required().label('Title'),\n        genreId: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().required().min(0).max(100).label('Number in Stock'),\n        dailyRentalRate: Joi.number().required().min(0).max(10).label('Daily Rental Rate')\n    }\n\n    async populateGenres() {\n        const {data: genres} = await getGenres();\n        this.setState({genres});\n    }\n\n    async populateMovie() {\n        try {\n            const movieId = this.props.match.params.id;\n            if(movieId === 'new') return\n            const {data: movie} = await getMovie(movieId)\n            this.setState({ data: this.mapToViewModal(movie) })\n        } catch (ex) {\n            if (ex.response && ex.response.status === 404) {\n                this.props.history.replace('/not-found')\n            }\n        }\n    }\n\n    async componentDidMount() {\n        await this.populateGenres();\n        await this.populateMovie();\n    }\n\n    mapToViewModal(movie) {\n        return {\n            _id: movie._id,\n            title: movie.title,\n            genreId: movie.genre._id,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        }\n    }\n\n    doSubmit = async () => {\n        await saveMovie(this.state.data)\n        this.props.history.push(\"/movies\")\n    }\n\n    render() { \n        return (\n            <div>\n                <h1>Movie Form</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"title\", \"Title\")}\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n                    {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n                    {this.renderButton(\"Save\")}\n                </form>\n            </div>\n        )\n    }\n}\n \nexport default MovieForm;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Form from './common/form'\nimport Joi from 'joi-browser'\nimport auth from '../services/authService'\n\nclass LoginForm extends Form {\n    state = {\n        data: { username: '', password: '' },\n        errors: {}\n    }\n\n    schema = {\n        username: Joi.string().required().label('Username'),\n        password: Joi.string().required().label('Password')\n    }\n\n    doSubmit = async () => {\n        try {\n            const { data } = this.state;\n            await auth.login(data.username, data.password);\n            const { state } = this.props.location;\n            window.location = state ? state.from.pathname : '/';\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const errors = {...this.state.errors};\n                errors.username = ex.response.data;\n                this.setState({errors})\n            }\n        }\n        \n    }\n\n    render() {\n        if (auth.getCurrentUser()) return <Redirect to=\"/\"/>\n\n        return (\n            <div>\n                <h1>Login</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"username\", \"Username\")}\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\n                    {this.renderButton(\"Login\")}\n                </form>\n            </div>\n        )\n    }\n}\n \nexport default LoginForm;","import React, { Component } from 'react';\nimport auth from \"../services/authService\";\n\nclass Logout extends Component {\n    componentDidMount() {\n        auth.logout();\n        window.location = '/';\n    }\n\n    render() { \n        return null;\n    }\n}\n \nexport default Logout;","import http from './httpService';\n\nconst apiEndpoint = '/users'\n\nexport function register(user) {\n    return http.post(apiEndpoint, {\n        email: user.username,\n        password: user.password,\n        name: user.name\n    })\n}","import React from 'react';\nimport Form from './common/form'\nimport Joi from 'joi-browser'\nimport * as userService from '../services/userService';\nimport auth from '../services/authService';\n\nclass RegisterForm extends Form {\n    state = {\n        data: { username: '', password: '', name: '' },\n        errors: {}\n    }\n\n    schema = {\n        username: Joi.string().required().email().label('Username'),\n        password: Joi.string().required().min(5).label('Password'),\n        name: Joi.string().required().label('Password')\n    }\n\n    doSubmit = async () => {\n        try {\n            const response = await userService.register(this.state.data);\n            auth.loginWithJwt(response.headers['x-auth-token']);\n            window.location = '/';\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const errors = {...this.state.errors};\n                errors.username = ex.response.data;\n                this.setState({errors});\n            }\n        }\n    }\n        \n\n    render() { \n        return (\n            <div>\n                <h1>Login</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"username\", \"Username\")}\n                    {this.renderInput(\"password\", \"Password\", \"password\")}\n                    {this.renderInput(\"name\", \"Name\")}\n                    {this.renderButton(\"Register\")}\n                </form>\n            </div>\n        )\n    }\n}\n \nexport default RegisterForm;","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from '../../services/authService';\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest}) => {\n    return ( \n        <Route\n            {...rest}\n            render={props => {\n                if (!auth.getCurrentUser()) return <Redirect to={{\n                    pathname: '/login',\n                    state: { from: props.location }\n                }} />\n                return Component ? <Component {...props}/> : render(props)\n            }}\n        />\n     );\n}\n \nexport default ProtectedRoute;","import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify';\nimport Movies from './components/movies';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/common/navBar';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport Logout from './components/logout';\nimport RegisterForm from './components/registerForm';\nimport ProtectedRoute from './components/common/protectedRoute';\nimport auth from './services/authService'\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {  };\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({user});\n  }\n\n  render() { \n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user}/>\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route \n              path=\"/movies\" \n              render={props => <Movies {...props} user={user}/>} \n            />\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n      \n    );\n  }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}